#include<iostream>
#include<stack>
using namespace std;
class stack{
	//properties
	int * arr;
	int top;
	int size;
	
	//behavior
	stack(int size){
		this->size=size;
		arr=new int[size];
		top=-1;
	}
	void push(int element){
		if(size-top>1){
			top++;
		}
		else{
			cout<<"stack overflow"<<endl;
		}
	}
	void pop(){
		if(top>=0){
			top--;
		}else{
			cout<<"stack underflow"<<endl;
		}
	}
	int peek(){
		if(top>=0)
		return arr[top];
	else{
		cout<<"stack is empty"<<endl;
		return -1;
	}
	bool isEmpty(){
		if(top==-1){
			return true;
		}
		else{
			return false;
		}
	}
};
int main(){
	stack st(s);
	st.push(22);
	st.push(44);
	st.push(32);
	
	cout<<"st.peek()"<<endl;
	st.pop();
	cout<<"st.peek()"<<endl;
	st.pop();
	cout<<"st.peek()"<<endl;
	st.pop();
	cout<<"st.peek()"<<endl;
	if(st.isempty()){
		cout<<"stack is empty mere dost"<<endl;
		
	}
	else{
		cout<<"stack is not empty mere dost"<<endl;
	}
	//creation of stack
	stack<int> s;
	//push operation
	s.push(2);
	s.push(3);
	
	//pop 
	s.pop();
	cout<<"Printing top  element"<<s.top()<<endl;
	if(s.empty()){
		cout<<"stack is empty"<<endl;
	}else{
		cout<<"stack is not empty"<<endl;
	} 
}
